{"version":3,"sources":["webpack:///./src/templates/Page/index.js","webpack:///./src/templates/index.js","webpack:///./src/components/Adsense/index.js","webpack:///./src/templates/Post/index.js"],"names":["templates_Page","_ref","data","react_default","a","createElement","dangerouslySetInnerHTML","__html","post","html","__webpack_exports__","location","Layout","Meta","title","get_default","site","Post","options","isIndex","adsense","props","pageQuery","components_Adsense","componentDidMount","this","clientId","window","adsbygoogle","push","render","_this$props","slotId","format","className","style","display","data-ad-client","data-ad-slot","data-ad-format","Component","Post_getAd","_data$frontmatter","frontmatter","category","tags","description","path","date","image","isMore","match","fixed","key","gatsby_browser_entry","boxShadow","to","dateTime","Post_Badges","items","primary","gatsby_image_default","margin","getDescription","Post_Button","label","body","replace","split","_ref2","_ref3","map_default","item","i"],"mappings":"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","file":"component---src-templates-index-js-782783e57f8a56bdc70d.js","sourcesContent":["import React from 'react'\r\nimport './style.scss'\r\n\r\nconst Page = ({ data }) => (\r\n  <div dangerouslySetInnerHTML={{ __html: data.post.html }} />\r\n)\r\nexport default Page\r\n","import { graphql } from 'gatsby'\r\nimport get from 'lodash/get'\r\nimport React from 'react'\r\n\r\nimport Post from 'templates/Post'\r\nimport Meta from 'components/Meta'\r\nimport Layout from 'components/Layout'\r\nimport Page from 'templates/Page'\r\n\r\nconst Template = ({ data, location }) => (\r\n  <div>\r\n    <Layout location={location}>\r\n      <Meta\r\n        title={get(data, 'post.frontmatter.title')}\r\n        site={get(data, 'site.meta')}\r\n      />\r\n      {get(data, 'post.frontmatter.layout') != 'page' ? (\r\n        <Post\r\n          data={get(data, 'post')}\r\n          options={{\r\n            isIndex: false,\r\n            adsense: get(data, 'site.meta.adsense'),\r\n          }}\r\n        />\r\n      ) : (\r\n        <Page {...this.props} />\r\n      )}\r\n    </Layout>\r\n  </div>\r\n)\r\nexport default Template\r\n\r\nexport const pageQuery = graphql`\r\n  query PostByPath($path: String!) {\r\n    site {\r\n      meta: siteMetadata {\r\n        title\r\n        description\r\n        url: siteUrl\r\n        author\r\n        twitter\r\n        adsense\r\n      }\r\n    }\r\n    post: markdownRemark(frontmatter: { path: { eq: $path } }) {\r\n      id\r\n      html\r\n      frontmatter {\r\n        layout\r\n        title\r\n        path\r\n        category\r\n        tags\r\n        description\r\n        date(formatString: \"YYYY/MM/DD\")\r\n        image {\r\n          childImageSharp {\r\n            fixed(width: 500) {\r\n              ...GatsbyImageSharpFixed_withWebp\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React from 'react'\r\n\r\nclass Adsense extends React.Component {\r\n  componentDidMount() {\r\n    const { clientId } = this.props\r\n    if (clientId) {\r\n      ;(window.adsbygoogle = window.adsbygoogle || []).push({})\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { clientId, slotId, format } = this.props\r\n\r\n    return clientId ? (\r\n      <div className=\"ad\">\r\n        <ins\r\n          className=\"adsbygoogle\"\r\n          style={{ display: 'block' }}\r\n          data-ad-client={clientId}\r\n          data-ad-slot={slotId}\r\n          data-ad-format={format}\r\n        />\r\n      </div>\r\n    ) : (\r\n      ''\r\n    )\r\n  }\r\n}\r\nexport default Adsense\r\n","import { Link } from 'gatsby'\r\nimport get from 'lodash/get'\r\nimport React from 'react'\r\nimport map from 'lodash/map'\r\nimport Img from 'gatsby-image'\r\n\r\nimport Adsense from 'components/Adsense'\r\nimport Footer from 'components/Footer'\r\nimport './style.scss'\r\n\r\nconst Post = ({ data, options }) => {\r\n  const {\r\n    category,\r\n    tags,\r\n    description,\r\n    title,\r\n    path,\r\n    date,\r\n    image,\r\n  } = data.frontmatter\r\n  const { isIndex, adsense } = options\r\n  const html = get(data, 'html')\r\n  const isMore = isIndex && !!html.match('<!--more-->')\r\n  const fixed = get(image, 'childImageSharp.fixed')\r\n\r\n  return (\r\n    <div className=\"article\" key={path}>\r\n      <div className=\"container\">\r\n        <div className=\"info\">\r\n          <Link style={{ boxShadow: 'none' }} to={path}>\r\n            <h1>{title}</h1>\r\n            <time dateTime={date}>{date}</time>\r\n          </Link>\r\n          {Badges({ items: [category], primary: true })}\r\n          {Badges({ items: tags })}\r\n        </div>\r\n        <div className=\"content\">\r\n          <p>{description}</p>\r\n          {fixed ? (\r\n            <Img fixed={fixed} style={{ display: 'block', margin: '0 auto' }} />\r\n          ) : (\r\n            ''\r\n          )}\r\n        </div>\r\n        <div\r\n          className=\"content\"\r\n          dangerouslySetInnerHTML={{\r\n            __html: isMore ? getDescription(html) : html,\r\n          }}\r\n        />\r\n        {isMore ? Button({ path, label: 'MORE', primary: true }) : ''}\r\n        {getAd(isIndex, adsense)}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post\r\n\r\nconst getAd = (isIndex, adsense) => {\r\n  return !isIndex ? <Adsense clientId={adsense} slotId=\"\" format=\"auto\" /> : ''\r\n}\r\n\r\nconst getDescription = body => {\r\n  body = body.replace(/<blockquote>/g, '<blockquote class=\"blockquote\">')\r\n  if (body.match('<!--more-->')) {\r\n    body = body.split('<!--more-->')\r\n    if (typeof body[0] !== 'undefined') {\r\n      return body[0]\r\n    }\r\n  }\r\n  return body\r\n}\r\n\r\nconst Button = ({ path, label, primary }) => (\r\n  <Link className=\"readmore\" to={path}>\r\n    <span\r\n      className={`btn btn-outline-primary btn-block ${\r\n        primary ? 'btn-outline-primary' : 'btn-outline-secondary'\r\n      }`}\r\n    >\r\n      {label}\r\n    </span>\r\n  </Link>\r\n)\r\n\r\nconst Badges = ({ items, primary }) =>\r\n  map(items, (item, i) => {\r\n    return (\r\n      <span\r\n        className={`badge ${primary ? 'badge-primary' : 'badge-secondary'}`}\r\n        key={i}\r\n      >\r\n        {item}\r\n      </span>\r\n    )\r\n  })\r\n"],"sourceRoot":""}